
package cn.ijingxi.common.app;

import java.util.*;

import cn.ijingxi.common.Process.*;
import cn.ijingxi.common.orm.*;
import cn.ijingxi.common.orm.ORM.KeyType;
import cn.ijingxi.common.util.*;

/**
 * 全局的，所有topspace共享
 * @author andrew
 *
 */
public class jxSystem extends jxORMobj
{	
	public static final UUID zeroUUID=UUID.fromString("00000000-0000-0000-0000-000000000000");
	public static final UUID broadUUID=UUID.fromString("11111111-1111-1111-1111-111111111111");

	public static jxSystem System=null;
	public static UUID SystemID=null;
	public static void Init() throws Exception
	{	
		InitClass(ORMType.Container.ordinal(),jxSystem.class);
		System=(jxSystem) GetByID(jxSystem.class,1,null);	
		SystemID=System.SystemUUID;
	}	
	public static void CreateDB() throws Exception
	{
		CreateTableInDB(jxSystem.class,null);
		CreateTableInDB(People.class,null);
		jxSystem s=(jxSystem) jxORMobj.New(jxSystem.class);
		s.SystemUUID=UUID.randomUUID();
		s.Insert(null);
		People p=(People) jxORMobj.New(People.class);;
		//1号是手机主人，但如果某人在两台手机上都装了，则会出现冲突，需要加以解决
		p.UniqueID=s.SystemUUID;
		p.Insert(null);
	}
	
	@ORM(keyType=KeyType.AutoDBGenerated)
	public int ID;
	
	@ORM
	public long MsgID;	
	
	@ORM
	public UUID SystemUUID;

	//用{}框起来的字符串Purpose（流水号用在哪，如流程名）、Name（当前请求者的姓名）YYYY、MM、DD或YYYYMMDD、SND4（4位日流水）、
	//SNT8（8位总流水）之类
	//如：{Purpose}-{Name}-{YYYYMMDD}-{SND3}，将产生：报销-徐晓轶-20150120-003
	@ORM(Descr="json格式的流水号模板")
	public String SN;

	@ORM(Descr="json格式的附加信息")
	public String Addition;
		
	private static Map<String,SN> SNTree=new HashMap<String,SN>();
	
	public long GetMsgID()
	{
		MsgID++;
		if(MsgID==Long.MAX_VALUE)
			MsgID=1;
		DelaySave(null);
		return MsgID;
	}
	
	public String GetSN(String Purpose,IExecutor caller) throws Exception
	{
		SN sn=SNTree.get(Purpose);
		if(sn==null)
		{
			Map<String,String> ks=new HashMap<String,String>();
			ks.put("Purpose", Purpose);
			String m=getExtendArrayValue("SN",ks,"Model");
			if(m==null)
				throw new Exception(Purpose+"未设置流水号！！");
			String dn=getExtendArrayValue("SN",ks,"DayNumber");
			String tn=getExtendArrayValue("SN",ks,"TotalNumber");
			String dt=getExtendArrayValue("SN",ks,"LastDate");
			sn=new SN(this,Purpose,m,Trans.TransToDate(dt));
			sn.Number=Trans.TransToInteger(dn);
			sn.TatolNumber=Trans.TransToInteger(tn);
			SNTree.put(Purpose, sn);
		}
		return sn.GetNumber(caller);
	}

	public int GetAutoGeneratedID(String ClsName) throws Exception
	{
		synchronized (this)
		{
			int num=Trans.TransToInteger(getExtendValue("Addition",ClsName));
			num++;
			setExtendValue("Addition",ClsName,num);
			Update(null);
			return num;
		}
	}
	
	void SaveSN_LastDate(String Purpose,Date d) throws Exception
	{
		Map<String,String> ks=new HashMap<String,String>();
		ks.put("Purpose", Purpose);
		setExtendArrayValue("SN",ks,"LastDate",Trans.TransToString(d));
	}
	void SaveSN_TotalNumber(String Purpose,int d) throws Exception
	{
		Map<String,String> ks=new HashMap<String,String>();
		ks.put("Purpose", Purpose);
		setExtendArrayValue("SN",ks,"TotalNumber",d);
	}
	void SaveSN_DayNumber(String Purpose,int d) throws Exception
	{
		Map<String,String> ks=new HashMap<String,String>();
		ks.put("Purpose", Purpose);
		setExtendArrayValue("SN",ks,"DayNumber",d);
	}
	public void AddSNModel(String Purpose,String Model) throws Exception
	{
		Map<String,String> ks=new HashMap<String,String>();
		ks.put("Purpose", Purpose);
		setExtendArrayValue("SN",ks,Purpose,Model);
	}
	
}
